# Generated from C:/Users/szaro/PycharmProjects/JtP/javaToPython.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,68,519,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,
        1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,
        1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
        1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,
        12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,
        15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,
        18,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,
        21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,
        23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,
        26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,
        28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,
        29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
        30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,
        31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
        32,1,32,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,
        37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,42,1,
        42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,1,47,1,
        47,1,47,1,48,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,
        53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,3,
        59,429,8,59,1,59,1,59,1,59,5,59,434,8,59,10,59,12,59,437,9,59,3,
        59,439,8,59,1,59,1,59,4,59,443,8,59,11,59,12,59,444,3,59,447,8,59,
        1,60,1,60,5,60,451,8,60,10,60,12,60,454,9,60,1,60,1,60,1,61,1,61,
        1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,
        1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,5,65,481,8,65,10,65,12,65,
        484,9,65,1,66,1,66,1,66,1,66,5,66,490,8,66,10,66,12,66,493,9,66,
        1,66,3,66,496,8,66,1,66,1,66,1,66,1,66,5,66,502,8,66,10,66,12,66,
        505,9,66,1,66,1,66,3,66,509,8,66,1,66,1,66,1,67,4,67,514,8,67,11,
        67,12,67,515,1,67,1,67,2,452,503,0,68,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
        81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
        51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
        121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,1,0,6,1,
        0,49,57,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,
        122,2,0,10,10,13,13,3,0,9,10,13,13,32,32,530,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
        0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,
        0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
        0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,
        0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,
        0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
        0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,
        0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,
        0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,
        1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,
        0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,
        0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,1,137,1,0,0,0,3,139,1,0,0,0,5,
        144,1,0,0,0,7,148,1,0,0,0,9,154,1,0,0,0,11,161,1,0,0,0,13,169,1,
        0,0,0,15,175,1,0,0,0,17,180,1,0,0,0,19,190,1,0,0,0,21,197,1,0,0,
        0,23,205,1,0,0,0,25,215,1,0,0,0,27,222,1,0,0,0,29,228,1,0,0,0,31,
        232,1,0,0,0,33,236,1,0,0,0,35,239,1,0,0,0,37,244,1,0,0,0,39,250,
        1,0,0,0,41,253,1,0,0,0,43,259,1,0,0,0,45,266,1,0,0,0,47,271,1,0,
        0,0,49,279,1,0,0,0,51,288,1,0,0,0,53,295,1,0,0,0,55,299,1,0,0,0,
        57,305,1,0,0,0,59,312,1,0,0,0,61,329,1,0,0,0,63,348,1,0,0,0,65,356,
        1,0,0,0,67,367,1,0,0,0,69,369,1,0,0,0,71,371,1,0,0,0,73,373,1,0,
        0,0,75,375,1,0,0,0,77,377,1,0,0,0,79,380,1,0,0,0,81,383,1,0,0,0,
        83,385,1,0,0,0,85,388,1,0,0,0,87,390,1,0,0,0,89,393,1,0,0,0,91,396,
        1,0,0,0,93,399,1,0,0,0,95,401,1,0,0,0,97,404,1,0,0,0,99,407,1,0,
        0,0,101,409,1,0,0,0,103,411,1,0,0,0,105,413,1,0,0,0,107,415,1,0,
        0,0,109,417,1,0,0,0,111,419,1,0,0,0,113,421,1,0,0,0,115,423,1,0,
        0,0,117,425,1,0,0,0,119,428,1,0,0,0,121,448,1,0,0,0,123,457,1,0,
        0,0,125,462,1,0,0,0,127,467,1,0,0,0,129,472,1,0,0,0,131,478,1,0,
        0,0,133,508,1,0,0,0,135,513,1,0,0,0,137,138,5,64,0,0,138,2,1,0,0,
        0,139,140,5,118,0,0,140,141,5,111,0,0,141,142,5,105,0,0,142,143,
        5,100,0,0,143,4,1,0,0,0,144,145,5,105,0,0,145,146,5,110,0,0,146,
        147,5,116,0,0,147,6,1,0,0,0,148,149,5,102,0,0,149,150,5,108,0,0,
        150,151,5,111,0,0,151,152,5,97,0,0,152,153,5,116,0,0,153,8,1,0,0,
        0,154,155,5,83,0,0,155,156,5,116,0,0,156,157,5,114,0,0,157,158,5,
        105,0,0,158,159,5,110,0,0,159,160,5,103,0,0,160,10,1,0,0,0,161,162,
        5,98,0,0,162,163,5,111,0,0,163,164,5,111,0,0,164,165,5,108,0,0,165,
        166,5,101,0,0,166,167,5,97,0,0,167,168,5,110,0,0,168,12,1,0,0,0,
        169,170,5,99,0,0,170,171,5,108,0,0,171,172,5,97,0,0,172,173,5,115,
        0,0,173,174,5,115,0,0,174,14,1,0,0,0,175,176,5,101,0,0,176,177,5,
        110,0,0,177,178,5,117,0,0,178,179,5,109,0,0,179,16,1,0,0,0,180,181,
        5,105,0,0,181,182,5,110,0,0,182,183,5,116,0,0,183,184,5,101,0,0,
        184,185,5,114,0,0,185,186,5,102,0,0,186,187,5,97,0,0,187,188,5,99,
        0,0,188,189,5,101,0,0,189,18,1,0,0,0,190,191,5,112,0,0,191,192,5,
        117,0,0,192,193,5,98,0,0,193,194,5,108,0,0,194,195,5,105,0,0,195,
        196,5,99,0,0,196,20,1,0,0,0,197,198,5,112,0,0,198,199,5,114,0,0,
        199,200,5,105,0,0,200,201,5,118,0,0,201,202,5,97,0,0,202,203,5,116,
        0,0,203,204,5,101,0,0,204,22,1,0,0,0,205,206,5,112,0,0,206,207,5,
        114,0,0,207,208,5,111,0,0,208,209,5,116,0,0,209,210,5,101,0,0,210,
        211,5,99,0,0,211,212,5,116,0,0,212,213,5,101,0,0,213,214,5,100,0,
        0,214,24,1,0,0,0,215,216,5,115,0,0,216,217,5,116,0,0,217,218,5,97,
        0,0,218,219,5,116,0,0,219,220,5,105,0,0,220,221,5,99,0,0,221,26,
        1,0,0,0,222,223,5,102,0,0,223,224,5,105,0,0,224,225,5,110,0,0,225,
        226,5,97,0,0,226,227,5,108,0,0,227,28,1,0,0,0,228,229,5,110,0,0,
        229,230,5,101,0,0,230,231,5,119,0,0,231,30,1,0,0,0,232,233,5,102,
        0,0,233,234,5,111,0,0,234,235,5,114,0,0,235,32,1,0,0,0,236,237,5,
        105,0,0,237,238,5,102,0,0,238,34,1,0,0,0,239,240,5,101,0,0,240,241,
        5,108,0,0,241,242,5,115,0,0,242,243,5,101,0,0,243,36,1,0,0,0,244,
        245,5,119,0,0,245,246,5,104,0,0,246,247,5,105,0,0,247,248,5,108,
        0,0,248,249,5,101,0,0,249,38,1,0,0,0,250,251,5,100,0,0,251,252,5,
        111,0,0,252,40,1,0,0,0,253,254,5,98,0,0,254,255,5,114,0,0,255,256,
        5,101,0,0,256,257,5,97,0,0,257,258,5,107,0,0,258,42,1,0,0,0,259,
        260,5,115,0,0,260,261,5,119,0,0,261,262,5,105,0,0,262,263,5,116,
        0,0,263,264,5,99,0,0,264,265,5,104,0,0,265,44,1,0,0,0,266,267,5,
        99,0,0,267,268,5,97,0,0,268,269,5,115,0,0,269,270,5,101,0,0,270,
        46,1,0,0,0,271,272,5,100,0,0,272,273,5,101,0,0,273,274,5,102,0,0,
        274,275,5,97,0,0,275,276,5,117,0,0,276,277,5,108,0,0,277,278,5,116,
        0,0,278,48,1,0,0,0,279,280,5,99,0,0,280,281,5,111,0,0,281,282,5,
        110,0,0,282,283,5,116,0,0,283,284,5,105,0,0,284,285,5,110,0,0,285,
        286,5,117,0,0,286,287,5,101,0,0,287,50,1,0,0,0,288,289,5,114,0,0,
        289,290,5,101,0,0,290,291,5,116,0,0,291,292,5,117,0,0,292,293,5,
        114,0,0,293,294,5,110,0,0,294,52,1,0,0,0,295,296,5,116,0,0,296,297,
        5,114,0,0,297,298,5,121,0,0,298,54,1,0,0,0,299,300,5,99,0,0,300,
        301,5,97,0,0,301,302,5,116,0,0,302,303,5,99,0,0,303,304,5,104,0,
        0,304,56,1,0,0,0,305,306,5,105,0,0,306,307,5,109,0,0,307,308,5,112,
        0,0,308,309,5,111,0,0,309,310,5,114,0,0,310,311,5,116,0,0,311,58,
        1,0,0,0,312,313,5,83,0,0,313,314,5,121,0,0,314,315,5,115,0,0,315,
        316,5,116,0,0,316,317,5,101,0,0,317,318,5,109,0,0,318,319,5,46,0,
        0,319,320,5,111,0,0,320,321,5,117,0,0,321,322,5,116,0,0,322,323,
        5,46,0,0,323,324,5,112,0,0,324,325,5,114,0,0,325,326,5,105,0,0,326,
        327,5,110,0,0,327,328,5,116,0,0,328,60,1,0,0,0,329,330,5,83,0,0,
        330,331,5,121,0,0,331,332,5,115,0,0,332,333,5,116,0,0,333,334,5,
        101,0,0,334,335,5,109,0,0,335,336,5,46,0,0,336,337,5,111,0,0,337,
        338,5,117,0,0,338,339,5,116,0,0,339,340,5,46,0,0,340,341,5,112,0,
        0,341,342,5,114,0,0,342,343,5,105,0,0,343,344,5,110,0,0,344,345,
        5,116,0,0,345,346,5,108,0,0,346,347,5,110,0,0,347,62,1,0,0,0,348,
        349,5,101,0,0,349,350,5,120,0,0,350,351,5,116,0,0,351,352,5,101,
        0,0,352,353,5,110,0,0,353,354,5,100,0,0,354,355,5,115,0,0,355,64,
        1,0,0,0,356,357,5,105,0,0,357,358,5,109,0,0,358,359,5,112,0,0,359,
        360,5,108,0,0,360,361,5,101,0,0,361,362,5,109,0,0,362,363,5,101,
        0,0,363,364,5,110,0,0,364,365,5,116,0,0,365,366,5,115,0,0,366,66,
        1,0,0,0,367,368,5,43,0,0,368,68,1,0,0,0,369,370,5,45,0,0,370,70,
        1,0,0,0,371,372,5,42,0,0,372,72,1,0,0,0,373,374,5,47,0,0,374,74,
        1,0,0,0,375,376,5,61,0,0,376,76,1,0,0,0,377,378,5,61,0,0,378,379,
        5,61,0,0,379,78,1,0,0,0,380,381,5,33,0,0,381,382,5,61,0,0,382,80,
        1,0,0,0,383,384,5,60,0,0,384,82,1,0,0,0,385,386,5,60,0,0,386,387,
        5,61,0,0,387,84,1,0,0,0,388,389,5,62,0,0,389,86,1,0,0,0,390,391,
        5,62,0,0,391,392,5,61,0,0,392,88,1,0,0,0,393,394,5,124,0,0,394,395,
        5,124,0,0,395,90,1,0,0,0,396,397,5,38,0,0,397,398,5,38,0,0,398,92,
        1,0,0,0,399,400,5,33,0,0,400,94,1,0,0,0,401,402,5,43,0,0,402,403,
        5,43,0,0,403,96,1,0,0,0,404,405,5,45,0,0,405,406,5,45,0,0,406,98,
        1,0,0,0,407,408,5,59,0,0,408,100,1,0,0,0,409,410,5,58,0,0,410,102,
        1,0,0,0,411,412,5,40,0,0,412,104,1,0,0,0,413,414,5,41,0,0,414,106,
        1,0,0,0,415,416,5,91,0,0,416,108,1,0,0,0,417,418,5,93,0,0,418,110,
        1,0,0,0,419,420,5,123,0,0,420,112,1,0,0,0,421,422,5,125,0,0,422,
        114,1,0,0,0,423,424,5,44,0,0,424,116,1,0,0,0,425,426,5,46,0,0,426,
        118,1,0,0,0,427,429,5,45,0,0,428,427,1,0,0,0,428,429,1,0,0,0,429,
        438,1,0,0,0,430,439,5,48,0,0,431,435,7,0,0,0,432,434,7,1,0,0,433,
        432,1,0,0,0,434,437,1,0,0,0,435,433,1,0,0,0,435,436,1,0,0,0,436,
        439,1,0,0,0,437,435,1,0,0,0,438,430,1,0,0,0,438,431,1,0,0,0,439,
        446,1,0,0,0,440,442,5,46,0,0,441,443,7,1,0,0,442,441,1,0,0,0,443,
        444,1,0,0,0,444,442,1,0,0,0,444,445,1,0,0,0,445,447,1,0,0,0,446,
        440,1,0,0,0,446,447,1,0,0,0,447,120,1,0,0,0,448,452,5,34,0,0,449,
        451,9,0,0,0,450,449,1,0,0,0,451,454,1,0,0,0,452,453,1,0,0,0,452,
        450,1,0,0,0,453,455,1,0,0,0,454,452,1,0,0,0,455,456,5,34,0,0,456,
        122,1,0,0,0,457,458,5,116,0,0,458,459,5,104,0,0,459,460,5,105,0,
        0,460,461,5,115,0,0,461,124,1,0,0,0,462,463,5,110,0,0,463,464,5,
        117,0,0,464,465,5,108,0,0,465,466,5,108,0,0,466,126,1,0,0,0,467,
        468,5,116,0,0,468,469,5,114,0,0,469,470,5,117,0,0,470,471,5,101,
        0,0,471,128,1,0,0,0,472,473,5,102,0,0,473,474,5,97,0,0,474,475,5,
        108,0,0,475,476,5,115,0,0,476,477,5,101,0,0,477,130,1,0,0,0,478,
        482,7,2,0,0,479,481,7,3,0,0,480,479,1,0,0,0,481,484,1,0,0,0,482,
        480,1,0,0,0,482,483,1,0,0,0,483,132,1,0,0,0,484,482,1,0,0,0,485,
        486,5,47,0,0,486,487,5,47,0,0,487,491,1,0,0,0,488,490,8,4,0,0,489,
        488,1,0,0,0,490,493,1,0,0,0,491,489,1,0,0,0,491,492,1,0,0,0,492,
        495,1,0,0,0,493,491,1,0,0,0,494,496,5,10,0,0,495,494,1,0,0,0,495,
        496,1,0,0,0,496,509,1,0,0,0,497,498,5,47,0,0,498,499,5,42,0,0,499,
        503,1,0,0,0,500,502,9,0,0,0,501,500,1,0,0,0,502,505,1,0,0,0,503,
        504,1,0,0,0,503,501,1,0,0,0,504,506,1,0,0,0,505,503,1,0,0,0,506,
        507,5,42,0,0,507,509,5,47,0,0,508,485,1,0,0,0,508,497,1,0,0,0,509,
        510,1,0,0,0,510,511,6,66,0,0,511,134,1,0,0,0,512,514,7,5,0,0,513,
        512,1,0,0,0,514,515,1,0,0,0,515,513,1,0,0,0,515,516,1,0,0,0,516,
        517,1,0,0,0,517,518,6,67,0,0,518,136,1,0,0,0,13,0,428,435,438,444,
        446,452,482,491,495,503,508,515,1,6,0,0
    ]

class javaToPythonLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    VOID = 2
    INT = 3
    FLOAT = 4
    STRING = 5
    BOOLEAN = 6
    CLASS = 7
    ENUM = 8
    INTERFACE = 9
    PUBLIC = 10
    PRIVATE = 11
    PROTECTED = 12
    STATIC = 13
    FINAL = 14
    NEW = 15
    FOR = 16
    IF = 17
    ELSE = 18
    WHILE = 19
    DO = 20
    BREAK = 21
    SWITCH = 22
    CASE = 23
    DEFAULT = 24
    CONTINUE = 25
    RETURN = 26
    TRY = 27
    CATCH = 28
    IMPORT = 29
    PRINT = 30
    PRINTLN = 31
    EXTENDS = 32
    IMPLEMENTS = 33
    PLUS = 34
    MINUS = 35
    MULTIPLY = 36
    DIVIDE = 37
    ASSIGN = 38
    EQUAL = 39
    NOTEQUAL = 40
    LESSTHAN = 41
    LESSOREQ = 42
    MORETHAN = 43
    MOREOREQ = 44
    OR = 45
    AND = 46
    NOT = 47
    INCREMENT = 48
    DECREMENT = 49
    SEMICOLON = 50
    COLON = 51
    LEFTPAREN = 52
    RIGHTPAREN = 53
    LEFTBRACKET = 54
    RIGHTBRACKET = 55
    LEFTBRACE = 56
    RIGHTBRACE = 57
    COMMA = 58
    DOT = 59
    NUMBER = 60
    TEXT = 61
    THIS = 62
    NULL = 63
    TRUE = 64
    FALSE = 65
    IDENTIFIER = 66
    COMMENT = 67
    WHITESPACE = 68

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'@'", "'void'", "'int'", "'float'", "'String'", "'boolean'", 
            "'class'", "'enum'", "'interface'", "'public'", "'private'", 
            "'protected'", "'static'", "'final'", "'new'", "'for'", "'if'", 
            "'else'", "'while'", "'do'", "'break'", "'switch'", "'case'", 
            "'default'", "'continue'", "'return'", "'try'", "'catch'", "'import'", 
            "'System.out.print'", "'System.out.println'", "'extends'", "'implements'", 
            "'+'", "'-'", "'*'", "'/'", "'='", "'=='", "'!='", "'<'", "'<='", 
            "'>'", "'>='", "'||'", "'&&'", "'!'", "'++'", "'--'", "';'", 
            "':'", "'('", "')'", "'['", "']'", "'{'", "'}'", "','", "'.'", 
            "'this'", "'null'", "'true'", "'false'" ]

    symbolicNames = [ "<INVALID>",
            "VOID", "INT", "FLOAT", "STRING", "BOOLEAN", "CLASS", "ENUM", 
            "INTERFACE", "PUBLIC", "PRIVATE", "PROTECTED", "STATIC", "FINAL", 
            "NEW", "FOR", "IF", "ELSE", "WHILE", "DO", "BREAK", "SWITCH", 
            "CASE", "DEFAULT", "CONTINUE", "RETURN", "TRY", "CATCH", "IMPORT", 
            "PRINT", "PRINTLN", "EXTENDS", "IMPLEMENTS", "PLUS", "MINUS", 
            "MULTIPLY", "DIVIDE", "ASSIGN", "EQUAL", "NOTEQUAL", "LESSTHAN", 
            "LESSOREQ", "MORETHAN", "MOREOREQ", "OR", "AND", "NOT", "INCREMENT", 
            "DECREMENT", "SEMICOLON", "COLON", "LEFTPAREN", "RIGHTPAREN", 
            "LEFTBRACKET", "RIGHTBRACKET", "LEFTBRACE", "RIGHTBRACE", "COMMA", 
            "DOT", "NUMBER", "TEXT", "THIS", "NULL", "TRUE", "FALSE", "IDENTIFIER", 
            "COMMENT", "WHITESPACE" ]

    ruleNames = [ "T__0", "VOID", "INT", "FLOAT", "STRING", "BOOLEAN", "CLASS", 
                  "ENUM", "INTERFACE", "PUBLIC", "PRIVATE", "PROTECTED", 
                  "STATIC", "FINAL", "NEW", "FOR", "IF", "ELSE", "WHILE", 
                  "DO", "BREAK", "SWITCH", "CASE", "DEFAULT", "CONTINUE", 
                  "RETURN", "TRY", "CATCH", "IMPORT", "PRINT", "PRINTLN", 
                  "EXTENDS", "IMPLEMENTS", "PLUS", "MINUS", "MULTIPLY", 
                  "DIVIDE", "ASSIGN", "EQUAL", "NOTEQUAL", "LESSTHAN", "LESSOREQ", 
                  "MORETHAN", "MOREOREQ", "OR", "AND", "NOT", "INCREMENT", 
                  "DECREMENT", "SEMICOLON", "COLON", "LEFTPAREN", "RIGHTPAREN", 
                  "LEFTBRACKET", "RIGHTBRACKET", "LEFTBRACE", "RIGHTBRACE", 
                  "COMMA", "DOT", "NUMBER", "TEXT", "THIS", "NULL", "TRUE", 
                  "FALSE", "IDENTIFIER", "COMMENT", "WHITESPACE" ]

    grammarFileName = "javaToPython.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


